* {
    padding: 0;
    margin: 0;
}

body {
    /* скроем контент, превышающий ширину окна
    браузера */
    overflow-x: hidden;
    /* устанавливаем основной шрифт контента -
    системный - это позволит быстрее загрузить
    страницу */
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    /* Единица rem задаёт размер относительно размера
    шрифта элемента <html> */
    font-size: 1.1rem;
    color: black;
    overflow: auto;
}

.container {
    /* устанавливаем основную ширину равной ширине
    видимой части окна браузера*/
    width: 100vw;
    /* устанавливаем минимальную ширину, до которой
    можно сжимать контейнер, если ширина
    устройства будет меньше - появится
    горизонтальный скролл */
    min-width: 320px;
    /* устанавливаем максимальную ширину, до которой
    можно расширять контейнер, если ширина
    устройства будет больше - по бокам появятся
    отступы */
    max-width: 1280px;
    /* для того, чтобы контейнер находился всегда
    по центру по горизонтали указываем значения
    для внешних отступов */
    margin: auto;
    padding: 2vh 5vh 5vh;
    /* в случае, если контента будет мало, чтобы
    страница полностью заполнила всю высоту окна
    браузера, устанавливаем минимальную высоту */
    min-height: 100vh;
    /* в случае, если контента будет много, чтобы
    появился вертикальный скролл, устанавливаем
    значение высоты равной содержимому */
    height: auto;
    /* для более простого расположения элементов
    на странице, воспользуемся технологией
    flexBox */
    display: flex;
    /* направление основной оси меняем на вертикальное */
    flex-direction: column;
    border: 3px solid black;
}

header {
    /* зададим размер header по основной оси */
    flex-basis: 10vh;
    /* элементы шапки сайта располагаются слева
 на право */
    display: block;
    /* между элементами задаем отступ */
    justify-content: space-between;
}

main {
    /* чтобы заполнять все пространство по основной
    оси основным элементом прописываем свойство
    flex */
    flex: 1 1 auto;
    display: flex;
    /* дочерние элементы располагаются слева на право */
    justify-content: flex-start;
    padding-top: 2vh;
    min-width: 700px;
}

.big {
    background-color: gray;
    height: 200px;
    width: 100%;
    margin-top: 20px;
    margin-bottom: 20px;
}

.small {
    background-color: gray;
    height: 40px;
    width: 40px;
    margin: 5px;
    float: left;
}

header>h1 {
    border: 3px solid black;
    align-self: center;
    width: 150px;
    font-size: 1.5rem;
    font-weight: 500;
    margin-bottom: 20px;
}

header>nav {
    border: 3px solid black;
    margin: auto;
    margin-bottom: 10px;
    height: 32px;
    display: flex;
    align-items: center;
}

header nav a {
    display: inline-flexbox;
    margin-left: 2vw;
    font-size: 1.1rem;
    text-decoration: none;
    border: 2px solid transparent;
    align-self: right;
}

header nav a:first-child {
    margin-left: 0;
}

header nav input {
    border: 3px solid black;
    position: absolute;
    right: 325px;
    top: 86px;
    width: 120px;
}

main section {
    width: 80%;
}

main section article {
    border: 3px solid black;
    margin: 10px 0px;
    margin-right: 20px;
    padding: 20px;
}

main aside.List {
    border: 3px solid black;
    height: 9em;
    width: 50%;
    margin: 10px 0;
    padding-left: 10px;
    display: flex;
    flex-direction: column;
}

main aside ul {
    list-style-type: none;
}

main aside.Lorem {
    border: 3px solid black;
    height: 9em;
    width: 50%;
    margin: 10px 0;
    padding: 0.5vw 0.5vw;
    display: flex;
    flex-wrap: wrap;
    align-content: center;
}

p {
    margin-bottom: 15px;
}

article {
    margin: 0;
}

@media screen and (max-width:768px) {
    main aside.Lorem {
        width: 30%;
        height: 32vh;
    }
    main aside.List {
        width: 30%;
        height: 18vh;
    }
    header nav input {
        position: absolute;
        right: 20px;
        top: 40px;
        width: 120px;
    }
}

@media screen and (max-width:320px) {
    header {
        flex-basis: auto;
        /* меняем направление основной оси шапки
 сайта */
        flex-direction: column;
    }
    main {
        /* меняем направление основной оси элемента
        отображающего основной контент */
        flex-direction: column;
    }
    main>aside {
        /* зададим размер видимому элементу aside
 по основной оси */
        flex-basis: 20vh;
    }
    main div aside.List {
        display: none;
    }
    header nav input {
        position: absolute;
        left: 581px;
        top: 25px;
        width: 120px;
    }
    body div.container {
        width: 221vw;
        padding: 0;
    }
    main section {
        flex-basis: auto;
        width: 100%;
    }
    main section article {
        margin: 0;
    }
    main aside.Lorem {
        height: 8vh;
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: center;
    }
}